<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hotel Management System</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
        }

        .header {
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            margin-bottom: 30px;
            text-align: center;
        }

        .header h1 {
            color: #667eea;
            font-size: 2.5em;
            margin-bottom: 10px;
        }

        .header p {
            color: #666;
            font-size: 1.1em;
        }

        .connection-status {
            display: inline-block;
            padding: 8px 20px;
            border-radius: 20px;
            font-size: 0.9em;
            font-weight: 600;
            margin-top: 10px;
        }

        .status-connected {
            background: #d4edda;
            color: #155724;
        }

        .status-disconnected {
            background: #f8d7da;
            color: #721c24;
        }

        .main-content {
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            margin-bottom: 30px;
        }

        .main-content h2 {
            color: #333;
            margin-bottom: 25px;
            font-size: 1.8em;
            border-bottom: 3px solid #667eea;
            padding-bottom: 10px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
            font-size: 0.95em;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 1em;
            transition: all 0.3s;
        }

        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 25px;
        }

        .booking-summary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 10px;
            margin-top: 20px;
        }

        .booking-summary h3 {
            margin-bottom: 15px;
            font-size: 1.3em;
        }

        .summary-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 15px;
        }

        .summary-item {
            text-align: center;
            padding: 15px;
            background: rgba(255,255,255,0.2);
            border-radius: 8px;
        }

        .summary-item .label {
            font-size: 0.9em;
            opacity: 0.9;
            margin-bottom: 5px;
        }

        .summary-item .value {
            font-size: 1.5em;
            font-weight: bold;
        }

        .btn {
            padding: 12px 30px;
            border: none;
            border-radius: 8px;
            font-size: 1em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .btn-success {
            background: #28a745;
            color: white;
        }

        .btn-success:hover {
            background: #218838;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(40, 167, 69, 0.4);
        }

        .btn-danger {
            background: #dc3545;
            color: white;
            padding: 8px 15px;
            font-size: 0.9em;
        }

        .btn-danger:hover {
            background: #c82333;
        }

        .alert {
            padding: 15px 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
            animation: slideIn 0.3s ease;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .alert-success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .alert-error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .admin-panel {
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }

        .admin-panel h2 {
            color: #333;
            margin-bottom: 25px;
            font-size: 1.8em;
            border-bottom: 3px solid #28a745;
            padding-bottom: 10px;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 25px;
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }

        .stat-card h3 {
            font-size: 2em;
            margin-bottom: 10px;
        }

        .stat-card p {
            opacity: 0.9;
            font-size: 1em;
        }

        .table-container {
            overflow-x: auto;
            margin-top: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: white;
        }

        thead {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        th {
            padding: 15px;
            text-align: left;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.85em;
            letter-spacing: 1px;
        }

        td {
            padding: 15px;
            border-bottom: 1px solid #eee;
        }

        tbody tr {
            transition: all 0.3s;
        }

        tbody tr:hover {
            background: #f8f9fa;
            transform: scale(1.01);
        }

        .status-badge {
            padding: 5px 12px;
            border-radius: 20px;
            font-size: 0.85em;
            font-weight: 600;
            display: inline-block;
        }

        .status-excellent {
            background: #d4edda;
            color: #155724;
        }

        .status-good {
            background: #cfe2ff;
            color: #084298;
        }

        .status-average {
            background: #fff3cd;
            color: #856404;
        }

        .status-poor {
            background: #f8d7da;
            color: #721c24;
        }

        .status-pending {
            background: #e7e7e7;
            color: #555;
        }

        .hidden {
            display: none;
        }

        .loader {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @media (max-width: 768px) {
            .form-grid {
                grid-template-columns: 1fr;
            }

            .summary-grid {
                grid-template-columns: 1fr;
            }

            .header h1 {
                font-size: 1.8em;
            }

            table {
                font-size: 0.85em;
            }

            th, td {
                padding: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <h1>üè® Hotel Management System</h1>
            <p>Manage your hotel bookings efficiently</p>
            <div id="connectionStatus" class="connection-status status-disconnected">
                üî¥ Connecting to Database...
            </div>
        </div>

        <!-- Alert Messages -->
        <div id="alertContainer"></div>

        <!-- Main Booking Form -->
        <div id="mainContent" class="main-content">
            <h2>üìù New Booking</h2>
            
            <div class="form-grid">
                <div class="form-group">
                    <label>Customer Name *</label>
                    <input type="text" id="customerName" required>
                </div>
                <div class="form-group">
                    <label>Customer Email *</label>
                    <input type="email" id="customerEmail" required>
                </div>
                <div class="form-group">
                    <label>Check-in Date *</label>
                    <input type="date" id="checkInDate" required>
                </div>
                <div class="form-group">
                    <label>Check-out Date *</label>
                    <input type="date" id="checkOutDate" required>
                </div>
                <div class="form-group">
                    <label>Room Type *</label>
                    <select id="roomType" required>
                        <option value="standard" data-price="100">Standard Room - $100/night</option>
                        <option value="deluxe" data-price="150">Deluxe Room - $150/night</option>
                        <option value="suite" data-price="250">Suite - $250/night</option>
                        <option value="presidential" data-price="500">Presidential Suite - $500/night</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Room Per Night ($) *</label>
                    <input type="number" id="roomPerNight" min="0" step="0.01" required>
                </div>
                <div class="form-group">
                    <label>Number of Guests *</label>
                    <input type="number" id="guestNumber" min="1" value="1" required>
                </div>
                <div class="form-group">
                    <label>Guest Satisfaction</label>
                    <select id="guestSatisfaction">
                        <option value="pending">Pending</option>
                        <option value="excellent">Excellent</option>
                        <option value="good">Good</option>
                        <option value="average">Average</option>
                        <option value="poor">Poor</option>
                    </select>
                </div>
            </div>

            <div id="bookingSummary" class="booking-summary hidden">
                <h3>üìä Booking Summary</h3>
                <div class="summary-grid">
                    <div class="summary-item">
                        <div class="label">Nights</div>
                        <div class="value" id="summaryNights">0</div>
                    </div>
                    <div class="summary-item">
                        <div class="label">Guests</div>
                        <div class="value" id="summaryGuests">1</div>
                    </div>
                    <div class="summary-item">
                        <div class="label">Rate/Night</div>
                        <div class="value" id="summaryRate">$0</div>
                    </div>
                    <div class="summary-item">
                        <div class="label">Total Price</div>
                        <div class="value" id="summaryTotal">$0</div>
                    </div>
                </div>
            </div>

            <button class="btn btn-success" onclick="addBooking()" style="margin-top: 20px; width: 100%;">Add Booking</button>
        </div>

        <!-- Admin Panel -->
        <div id="adminPanel" class="admin-panel">
            <h2>üìä Admin Panel - All Bookings</h2>
            
            <div class="stats-grid">
                <div class="stat-card">
                    <h3 id="totalBookings">0</h3>
                    <p>Total Bookings</p>
                </div>
                <div class="stat-card">
                    <h3 id="totalRevenue">$0</h3>
                    <p>Total Revenue</p>
                </div>
                <div class="stat-card">
                    <h3 id="totalNights">0</h3>
                    <p>Total Nights</p>
                </div>
                <div class="stat-card">
                    <h3 id="totalGuests">0</h3>
                    <p>Total Guests</p>
                </div>
            </div>

            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>Customer</th>
                            <th>Email</th>
                            <th>Check-in</th>
                            <th>Check-out</th>
                            <th>Room Type</th>
                            <th>Nights</th>
                            <th>Guests</th>
                            <th>Rate</th>
                            <th>Total</th>
                            <th>Satisfaction</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="bookingsTableBody">
                        <tr>
                            <td colspan="11" style="text-align: center; padding: 30px;">
                                <div class="loader"></div>
                                <p>Loading bookings...</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Firebase SDK -->
    <script src="https://www.gstatic.com/firebasejs/10.7.1/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/10.7.1/firebase-database-compat.js"></script>

    <script>
        // ============================================
        // FIREBASE CONFIGURATION
        // Update these values with your Firebase project credentials
        // ============================================
        const FIREBASE_CONFIG = {
            apiKey: "AIzaSyDN9-FOx1bMMTmGaHpsvt7MO0eZbJF0mVw",
  	   authDomain: "luxurystay-f4d48.firebaseapp.com",
  	   databaseURL: "https://luxurystay-f4d48-default-rtdb.firebaseio.com",
  	   projectId: "luxurystay-f4d48",
  	   storageBucket: "luxurystay-f4d48.firebasestorage.app",
  	   messagingSenderId: "957241383544",
  	   appId: "1:957241383544:web:a8a95c3e528717d6a92b8d",
  	   measurementId: "G-PSBW82LPQ8"
        };
        // ============================================

        let database;

        // Initialize Firebase on page load
        function initializeFirebase() {
            try {
                firebase.initializeApp(FIREBASE_CONFIG);
                database = firebase.database();
                
                // Test connection
                database.ref('.info/connected').on('value', (snapshot) => {
                    const statusElement = document.getElementById('connectionStatus');
                    if (snapshot.val() === true) {
                        statusElement.textContent = 'üü¢ Connected to Database';
                        statusElement.className = 'connection-status status-connected';
                        loadBookings();
                    } else {
                        statusElement.textContent = 'üî¥ Disconnected';
                        statusElement.className = 'connection-status status-disconnected';
                    }
                });

            } catch (error) {
                showAlert('Error connecting to Firebase: ' + error.message, 'error');
                document.getElementById('connectionStatus').textContent = 'üî¥ Connection Failed';
            }
        }

        // Show alert message
        function showAlert(message, type) {
            const alertContainer = document.getElementById('alertContainer');
            const alertClass = type === 'success' ? 'alert-success' : 'alert-error';
            const icon = type === 'success' ? '‚úì' : '‚úó';

            alertContainer.innerHTML = `
                <div class="alert ${alertClass}">
                    <span style="font-size: 1.5em;">${icon}</span>
                    <span>${message}</span>
                </div>
            `;

            setTimeout(() => {
                alertContainer.innerHTML = '';
            }, 5000);
        }

        // Calculate stay details
        function calculateStayDetails() {
            const checkIn = document.getElementById('checkInDate').value;
            const checkOut = document.getElementById('checkOutDate').value;
            const roomPerNight = parseFloat(document.getElementById('roomPerNight').value) || 0;
            const guestNumber = parseInt(document.getElementById('guestNumber').value) || 1;

            if (checkIn && checkOut && roomPerNight > 0 && guestNumber > 0) {
                const checkInDate = new Date(checkIn);
                const checkOutDate = new Date(checkOut);
                const timeDiff = checkOutDate - checkInDate;
                const nights = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));

                if (nights > 0) {
                    // New formula: total_price = room_per_night * spend_nights * guest_number
                    const totalPrice = roomPerNight * nights * guestNumber;

                    document.getElementById('summaryNights').textContent = nights;
                    document.getElementById('summaryGuests').textContent = guestNumber;
                    document.getElementById('summaryRate').textContent = '$' + roomPerNight.toFixed(2);
                    document.getElementById('summaryTotal').textContent = '$' + totalPrice.toFixed(2);
                    document.getElementById('bookingSummary').classList.remove('hidden');

                    return { nights, guestNumber, totalPrice };
                }
            }

            document.getElementById('bookingSummary').classList.add('hidden');
            return null;
        }

        // Update room price when room type changes
        document.getElementById('roomType').addEventListener('change', function() {
            const selectedOption = this.options[this.selectedIndex];
            const price = selectedOption.getAttribute('data-price');
            document.getElementById('roomPerNight').value = price;
            calculateStayDetails();
        });

        // Auto-calculate when dates, price, or guest number change
        document.getElementById('checkInDate').addEventListener('change', calculateStayDetails);
        document.getElementById('checkOutDate').addEventListener('change', calculateStayDetails);
        document.getElementById('roomPerNight').addEventListener('input', calculateStayDetails);
        document.getElementById('guestNumber').addEventListener('input', calculateStayDetails);

        // Add new booking
        function addBooking() {
            const customerName = document.getElementById('customerName').value;
            const customerEmail = document.getElementById('customerEmail').value;
            const checkInDate = document.getElementById('checkInDate').value;
            const checkOutDate = document.getElementById('checkOutDate').value;
            const roomType = document.getElementById('roomType').value;
            const roomPerNight = parseFloat(document.getElementById('roomPerNight').value);
            const guestNumber = parseInt(document.getElementById('guestNumber').value);
            const guestSatisfaction = document.getElementById('guestSatisfaction').value;

            if (!customerName || !customerEmail || !checkInDate || !checkOutDate || !roomPerNight || !guestNumber) {
                showAlert('Please fill in all required fields!', 'error');
                return;
            }

            if (guestNumber < 1) {
                showAlert('Number of guests must be at least 1!', 'error');
                return;
            }

            const stayDetails = calculateStayDetails();
            if (!stayDetails || stayDetails.nights <= 0) {
                showAlert('Check-out date must be after check-in date!', 'error');
                return;
            }

            const bookingData = {
                customer_name: customerName,
                customer_email: customerEmail,
                check_in_date: checkInDate,
                check_out_date: checkOutDate,
                room_type: roomType,
                guest_satisfaction: guestSatisfaction,
                room_per_night: roomPerNight,
                spend_nights: stayDetails.nights,
                guest_number: guestNumber,
                total_price: stayDetails.totalPrice,
                booking_timestamp: new Date().toISOString(),
                status: 'confirmed'
            };

            database.ref('bookings').push(bookingData)
                .then(() => {
                    showAlert('Booking added successfully! ‚úì', 'success');
                    clearForm();
                })
                .catch((error) => {
                    showAlert('Error adding booking: ' + error.message, 'error');
                });
        }

        // Clear form
        function clearForm() {
            document.getElementById('customerName').value = '';
            document.getElementById('customerEmail').value = '';
            document.getElementById('checkInDate').value = '';
            document.getElementById('checkOutDate').value = '';
            document.getElementById('roomType').selectedIndex = 0;
            document.getElementById('roomPerNight').value = '100';
            document.getElementById('guestNumber').value = '1';
            document.getElementById('guestSatisfaction').selectedIndex = 0;
            document.getElementById('bookingSummary').classList.add('hidden');
        }

        // Load all bookings
        function loadBookings() {
            database.ref('bookings').on('value', (snapshot) => {
                const bookings = snapshot.val();
                const tbody = document.getElementById('bookingsTableBody');
                tbody.innerHTML = '';

                if (!bookings) {
                    tbody.innerHTML = '<tr><td colspan="11" style="text-align: center; padding: 30px;">No bookings found. Add your first booking!</td></tr>';
                    updateStats(0, 0, 0, 0);
                    return;
                }

                let totalBookings = 0;
                let totalRevenue = 0;
                let totalNights = 0;
                let totalGuests = 0;

                Object.keys(bookings).forEach((key) => {
                    const booking = bookings[key];
                    totalBookings++;
                    totalRevenue += booking.total_price;
                    totalNights += booking.spend_nights;
                    totalGuests += booking.guest_number || 1;

                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td><strong>${booking.customer_name}</strong></td>
                        <td>${booking.customer_email}</td>
                        <td>${booking.check_in_date}</td>
                        <td>${booking.check_out_date}</td>
                        <td style="text-transform: capitalize;">${booking.room_type}</td>
                        <td><strong>${booking.spend_nights}</strong></td>
                        <td><strong>${booking.guest_number || 1}</strong></td>
                        <td>$${booking.room_per_night.toFixed(2)}</td>
                        <td><strong style="color: #667eea;">$${booking.total_price.toFixed(2)}</strong></td>
                        <td><span class="status-badge status-${booking.guest_satisfaction}">${booking.guest_satisfaction}</span></td>
                        <td><button class="btn btn-danger" onclick="deleteBooking('${key}')">Delete</button></td>
                    `;
                    tbody.appendChild(row);
                });

                updateStats(totalBookings, totalRevenue, totalNights, totalGuests);
            });
        }

        // Update statistics
        function updateStats(bookings, revenue, nights, guests) {
            document.getElementById('totalBookings').textContent = bookings;
            document.getElementById('totalRevenue').textContent = '$' + revenue.toFixed(2);
            document.getElementById('totalNights').textContent = nights;
            document.getElementById('totalGuests').textContent = guests;
        }

        // Delete booking
        function deleteBooking(bookingId) {
            if (confirm('Are you sure you want to delete this booking?')) {
                database.ref('bookings/' + bookingId).remove()
                    .then(() => {
                        showAlert('Booking deleted successfully!', 'success');
                    })
                    .catch((error) => {
                        showAlert('Error deleting booking: ' + error.message, 'error');
                    });
            }
        }

        // Initialize on page load
        window.onload = function() {
            document.getElementById('roomPerNight').value = '100';
            document.getElementById('guestNumber').value = '1';
            initializeFirebase();
        };
    </script>
</body>
</html>
